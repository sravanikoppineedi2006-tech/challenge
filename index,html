<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>PulseBoard ‚Äî Single-file Web Dashboard</title>
  <!-- Chart.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    /* ====== Root & Reset ====== */
    :root{
      --bg:#0f1724; --card:#0b1220; --muted:#93a3b8; --accent:#5eead4; --accent-2:#60a5fa;
      --glass: rgba(255,255,255,0.04);
      --radius:12px;
      --card-shadow: 0 6px 18px rgba(2,6,23,0.6);
      --glass-border: rgba(255,255,255,0.03);
      --text:#e6eef6;
    }
    *{box-sizing:border-box;margin:0;padding:0;font-family:Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial}
    html,body,#app{height:100%}
    body{
      background: linear-gradient(180deg,var(--bg),#081023 60%);
      color:var(--text);padding:20px;line-height:1.35;
    }

    /* ====== Layout ====== */
    .wrap{display:grid;grid-template-columns:260px 1fr;gap:20px;align-items:start}
    .sidebar{background:linear-gradient(180deg,var(--card),#071021);border-radius:var(--radius);padding:20px;box-shadow:var(--card-shadow);height:calc(100vh - 40px);overflow:auto}
    .brand{display:flex;align-items:center;gap:12px;margin-bottom:18px}
    .logo{width:44px;height:44px;border-radius:10px;background:linear-gradient(135deg,var(--accent),var(--accent-2));display:grid;place-items:center;font-weight:700}
    .nav{margin-top:8px}
    .nav a{display:flex;gap:10px;align-items:center;padding:10px;border-radius:10px;color:var(--muted);text-decoration:none;margin-bottom:6px}
    .nav a.active, .nav a:hover{background:var(--glass);color:var(--text)}

    .main{min-height:100vh}
    .topbar{display:flex;justify-content:space-between;gap:12px;align-items:center;margin-bottom:18px}
    .search{flex:1;display:flex;gap:10px;align-items:center;background:var(--glass);padding:8px;border-radius:10px}
    .search input{border:0;background:transparent;outline:none;color:var(--text);width:100%}
    .controls{display:flex;gap:10px;align-items:center}
    .btn{padding:8px 12px;border-radius:10px;background:transparent;border:1px solid var(--glass-border);cursor:pointer;color:var(--text)}

    /* ====== Dashboard grid ====== */
    .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:16px}
    .card{background:linear-gradient(180deg,rgba(255,255,255,0.02),rgba(255,255,255,0.01));padding:16px;border-radius:12px;box-shadow:var(--card-shadow)}
    .col-span-3{grid-column:span 3}
    .col-span-4{grid-column:span 4}
    .col-span-6{grid-column:span 6}
    .col-span-12{grid-column:span 12}

    .kpi{display:flex;flex-direction:column;gap:8px}
    .kpi .value{font-size:20px;font-weight:700}
    .kpi .label{color:var(--muted);font-size:13px}

    .chart-wrap{height:220px}

    table{width:100%;border-collapse:collapse}
    th,td{padding:8px;text-align:left;border-bottom:1px solid rgba(255,255,255,0.03);font-size:13px}
    th{color:var(--muted);font-size:12px}

    /* small screens */
    @media (max-width:900px){
      .wrap{grid-template-columns:1fr}
      .sidebar{height:auto;order:2}
      .main{order:1}
      .grid{grid-auto-flow:row}
      .col-span-3,.col-span-4,.col-span-6{grid-column:span 12}
    }

    /* tiny UI niceties */
    .spark{font-size:12px;color:var(--muted)}
    .progress{height:8px;background:rgba(255,255,255,0.04);border-radius:999px;overflow:hidden}
    .progress > i{display:block;height:100%;border-radius:999px}

    .pill{padding:4px 8px;border-radius:999px;background:rgba(255,255,255,0.03);font-size:12px}

    footer{color:var(--muted);font-size:12px;margin-top:18px}
  </style>
</head>
<body>
  <div id="app" class="wrap">
    <aside class="sidebar">
      <div class="brand">
        <div class="logo">PB</div>
        <div>
          <div style="font-weight:700">PulseBoard</div>
          <div class="spark">Insights ‚Ä¢ realtime ‚Ä¢ demo</div>
        </div>
      </div>

      <nav class="nav">
        <a class="active" href="#">üè† Overview</a>
        <a href="#">üìä Analytics</a>
        <a href="#">üíº Projects</a>
        <a href="#">üßæ Reports</a>
        <a href="#">‚öôÔ∏è Settings</a>
      </nav>

      <div style="margin-top:18px">
        <div class="pill">Data sync: <strong id="syncStatus">Connected</strong></div>
        <div style="margin-top:12px;color:var(--muted);font-size:13px">Quick Filters</div>
        <div style="display:flex;gap:8px;margin-top:8px">
          <button class="btn" onclick="applyFilter('7d')">7d</button>
          <button class="btn" onclick="applyFilter('30d')">30d</button>
          <button class="btn" onclick="applyFilter('90d')">90d</button>
        </div>
      </div>

      <footer>
        <div style="margin-top:18px">¬© <span id="year"></span> PulseBoard</div>
      </footer>
    </aside>

    <main class="main">
      <div class="topbar">
        <div class="search">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" style="opacity:0.8"><path d="M21 21l-4.35-4.35" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><circle cx="11" cy="11" r="6" stroke="currentColor" stroke-width="1.5"></circle></svg>
          <input id="search" placeholder="Search projects, users, reports..." />
        </div>

        <div class="controls">
          <div class="btn" id="themeToggle">üåô</div>
          <div class="btn" onclick="openQuickAdd()">Ôºã Add</div>
        </div>
      </div>

      <section class="grid">
        <!-- KPIs -->
        <div class="card col-span-3 kpi">
          <div class="label">Active Users</div>
          <div class="value" id="kpi-users">--</div>
          <div class="spark">+ <span id="kpi-users-change">0.0%</span> vs last period</div>
        </div>

        <div class="card col-span-3 kpi">
          <div class="label">Monthly Revenue</div>
          <div class="value" id="kpi-rev">--</div>
          <div class="spark">MRR ‚Ä¢ <span id="kpi-rev-change">0.0%</span></div>
        </div>

        <div class="card col-span-3 kpi">
          <div class="label">Conversion Rate</div>
          <div class="value" id="kpi-cr">--</div>
          <div class="spark">Avg across funnel</div>
        </div>

        <div class="card col-span-3 kpi">
          <div class="label">Server Health</div>
          <div class="value">99.97%</div>
          <div class="spark">Uptime (30d)</div>
        </div>

        <!-- Charts -->
        <div class="card col-span-6">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:8px">
            <div style="font-weight:700">Users Over Time</div>
            <div class="pill">Last 30 days</div>
          </div>
          <div class="chart-wrap"><canvas id="lineChart"></canvas></div>
        </div>

        <div class="card col-span-6">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:8px">
            <div style="font-weight:700">Revenue Breakdown</div>
            <div class="pill">By Plan</div>
          </div>
          <div class="chart-wrap"><canvas id="doughnutChart"></canvas></div>
        </div>

        <!-- Table -->
        <div class="card col-span-12">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:12px">
            <div style="font-weight:700">Latest Transactions</div>
            <div class="spark">Showing top 8</div>
          </div>

          <table>
            <thead>
              <tr><th>User</th><th>Project</th><th>Amount</th><th>Date</th><th>Status</th></tr>
            </thead>
            <tbody id="txTable">
              <!-- rows populated by JS -->
            </tbody>
          </table>
        </div>

        <!-- Small widgets -->
        <div class="card col-span-4">
          <div style="font-weight:700;margin-bottom:8px">Tasks</div>
          <div style="display:flex;flex-direction:column;gap:8px" id="taskList"></div>
        </div>

        <div class="card col-span-4">
          <div style="font-weight:700;margin-bottom:8px">Deployment</div>
          <div class="spark">Last deploy: <strong id="lastDeploy">‚Äî</strong></div>
          <div style="margin-top:12px">Build status</div>
          <div style="margin-top:8px" class="progress"><i id="deployProg" style="width:74%;background:linear-gradient(90deg,var(--accent),var(--accent-2));"></i></div>
        </div>

        <div class="card col-span-4">
          <div style="font-weight:700;margin-bottom:8px">Announcements</div>
          <div style="color:var(--muted);font-size:13px">No new announcements. All systems nominal.</div>
        </div>

      </section>
    </main>
  </div>

  <script>
    // ===== Sample data =====
    const sample = {
      users: 12850,
      usersChange: 4.7,
      revenue: 42350,
      revenueChange: 5.2,
      conversion: 3.8,
      series: generateSeries(30),
      plans: {Free: 24, Pro: 52, Enterprise: 24},
      tx: [
        {user:'Asha K', project:'Website Redesign', amount:1200, date:'2025-09-15', status:'Paid'},
        {user:'Ravi P', project:'Mobile App', amount:5400, date:'2025-09-13', status:'Pending'},
        {user:'Sunita V', project:'Analytics', amount:300, date:'2025-09-12', status:'Paid'},
        {user:'Kiran S', project:'SEO', amount:450, date:'2025-09-11', status:'Refunded'},
        {user:'Nisha M', project:'Branding', amount:900, date:'2025-09-10', status:'Paid'},
        {user:'Vikram R', project:'Cloud Migration', amount:7800, date:'2025-09-07', status:'Paid'},
        {user:'Priya D', project:'Ad Campaign', amount:600, date:'2025-09-05', status:'Pending'},
        {user:'Arun T', project:'Security Audit', amount:1500, date:'2025-09-02', status:'Paid'}
      ],
      tasks: [
        {title:'Review Q3 roadmap', done:false},
        {title:'Approve invoices', done:true},
        {title:'Customer outreach: 5 VIPs', done:false}
      ],
      lastDeploy: '2025-09-16 22:14'
    }

    // ===== Utilities =====
    function formatCurrency(n){
      return n.toLocaleString('en-IN', {style:'currency', currency:'INR', maximumFractionDigits:0})
    }

    function generateSeries(days){
      const arr=[]; for(let i=days;i>0;i--){
        const d=new Date(); d.setDate(d.getDate()-i+1);
        arr.push({label: d.toLocaleDateString(), value: Math.round(400 + Math.random()*2000)})
      } return arr
    }

    // ===== Populate KPIs =====
    document.getElementById('kpi-users').innerText = sample.users.toLocaleString()
    document.getElementById('kpi-users-change').innerText = sample.usersChange + '%'
    document.getElementById('kpi-rev').innerText = formatCurrency(sample.revenue)
    document.getElementById('kpi-rev-change').innerText = sample.revenueChange + '%'
    document.getElementById('kpi-cr').innerText = sample.conversion + '%'
    document.getElementById('year').innerText = new Date().getFullYear()

    // ===== Table =====
    const txTable = document.getElementById('txTable')
    sample.tx.forEach(t=>{
      const tr=document.createElement('tr')
      tr.innerHTML = `<td>${t.user}</td><td>${t.project}</td><td>${formatCurrency(t.amount)}</td><td>${t.date}</td><td>${t.status}</td>`
      txTable.appendChild(tr)
    })

    // ===== Tasks =====
    const tlist = document.getElementById('taskList')
    sample.tasks.forEach((tk, idx)=>{
      const el = document.createElement('div')
      el.style.display='flex'; el.style.justifyContent='space-between'; el.style.alignItems='center'
      el.innerHTML = `<div><input type='checkbox' id='tk${idx}' ${tk.done? 'checked':''}/> <label for='tk${idx}' style='margin-left:8px'>${tk.title}</label></div><div class='spark'>${tk.done? 'Done':'Open'}</div>`
      tlist.appendChild(el)
    })

    document.getElementById('lastDeploy').innerText = sample.lastDeploy

    // ===== Charts (Chart.js) =====
    const lineCtx = document.getElementById('lineChart').getContext('2d')
    const lineChart = new Chart(lineCtx, {
      type: 'line',
      data: {
        labels: sample.series.map(s=>s.label),
        datasets: [{
          label: 'Active users',
          data: sample.series.map(s=>s.value),
          fill: true,
          tension: 0.3,
          borderWidth:2,
          backgroundColor: 'rgba(94,234,212,0.06)',
          borderColor: 'rgba(94,234,212,0.9)'
        }]
      },
      options: {
        responsive:true,
        plugins:{legend:{display:false},tooltip:{mode:'index',intersect:false}},
        scales:{x:{grid:{display:false}},y:{grid:{color:'rgba(255,255,255,0.03)'}}
      }
    })

    const doughCtx = document.getElementById('doughnutChart').getContext('2d')
    const doughnutChart = new Chart(doughCtx, {
      type:'doughnut',
      data: {
        labels: Object.keys(sample.plans),
        datasets:[{data: Object.values(sample.plans), borderWidth:0}]
      },
      options:{plugins:{legend:{position:'bottom'}}}
    })

    // ===== Interactions =====
    function applyFilter(range){
      // basic demo: mutate the charts with random data to simulate filtering
      const days = range==='7d'?7: range==='30d'?30:90
      const newSeries = generateSeries(days)
      lineChart.data.labels = newSeries.map(s=>s.label)
      lineChart.data.datasets[0].data = newSeries.map(s=>s.value)
      lineChart.update()
      document.getElementById('syncStatus').innerText = 'Synced ('+range+')'
    }

    function openQuickAdd(){
      const title = prompt('Quick add a task')
      if(!title) return
      sample.tasks.unshift({title, done:false})
      location.reload() // simple way to reflect change in this demo
    }

    // Theme toggle (light/dark)
    const themeBtn = document.getElementById('themeToggle')
    let light=false
    themeBtn.addEventListener('click', ()=>{
      light = !light
      if(light){
        document.documentElement.style.setProperty('--bg','#f5f7fb')
        document.documentElement.style.setProperty('--card','#ffffff')
        document.documentElement.style.setProperty('--text','#071225')
        document.documentElement.style.setProperty('--muted','#6b7280')
        themeBtn.innerText='‚òÄÔ∏è'
      } else {
        document.documentElement.style.setProperty('--bg','#0f1724')
        document.documentElement.style.setProperty('--card','#0b1220')
        document.documentElement.style.setProperty('--text','#e6eef6')
        document.documentElement.style.setProperty('--muted','#93a3b8')
        themeBtn.innerText='üåô'
      }
    })

    // small helper so the sample chart data changes each time this file loads
    function randomize(){
      const add = Math.round(Math.random()*2000 - 1000)
      sample.users = Math.max(1000, sample.users + add)
      document.getElementById('kpi-users').innerText = sample.users.toLocaleString()
    }
    randomize()
  </script>
</body>
</html>
